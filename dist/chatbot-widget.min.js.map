{"version":3,"file":"chatbot-widget.min.js","mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,gBAAiB,GAAIH,GACF,iBAAZC,QACdA,QAAuB,cAAID,IAE3BD,EAAoB,cAAIC,GACzB,CATD,CASGK,MAAM,uBCRT,IAAIC,EAAsB,CCA1BA,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,qVCW3E,SAASI,EAAcC,GAAqC,IAAhCC,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGG,EAAQH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACrDI,EAAUC,SAASR,cAAcC,GA6BvC,OA1BAV,OAAOkB,QAAQP,GAAYQ,SAAQ,SAAAC,GAAkB,QAAAC,KAAA,8CAAAD,01BAAhBtB,EAAGuB,EAAA,GAAEC,EAAKD,EAAA,GAC3C,GAAY,cAARvB,EACAkB,EAAQO,UAAYD,OACjB,GAAY,cAARxB,EACPkB,EAAQQ,UAAYF,OACjB,GAAY,UAARxB,GAAoC,WAAjB2B,EAAOH,GACjCtB,OAAO0B,OAAOV,EAAQW,MAAOL,QAC1B,GAAIxB,EAAI8B,WAAW,OAA0B,mBAAVN,EAAsB,CAC5D,IAAMO,EAAY/B,EAAIgC,UAAU,GAAGC,cACnCf,EAAQgB,iBAAiBH,EAAWP,EACxC,MACIN,EAAQiB,aAAanC,EAAKwB,EAElC,IAGIY,MAAMC,QAAQpB,GACdA,EAASI,SAAQ,SAAAiB,GACTA,GACAC,EAAYrB,EAASoB,EAE7B,IACOrB,GACPsB,EAAYrB,EAASD,GAGlBC,CACX,CAOA,SAASqB,EAAYC,EAAQF,GACJ,iBAAVA,GAAuC,iBAAVA,EACpCE,EAAOD,YAAYpB,SAASsB,eAAeH,IACpCA,aAAiBI,aACxBF,EAAOD,YAAYD,EAE3B,CAyDO,SAASK,EAAezB,GAAwB,IAAf0B,IAAM9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACrCI,GAELA,EAAQ2B,SAAS,CACbC,IAAK5B,EAAQ6B,aACbC,SAAUJ,EAAS,SAAW,QAEtC,qhCCpHA,IAAMK,EAAc,mRAuBPC,EAAS,WAalB,SAZA,SAAAA,EAAYC,gGAAQC,CAAA,KAAAF,GAChBrD,KAAKsD,sWAAME,CAAA,CACPC,QAAS,eACTC,aAAc,WACXJ,GAGPtD,KAAK2D,QAAS,EACd3D,KAAK4D,SAAW,CAAC,EACjB5D,KAAK6D,cAAgB,CAAC,CAC1B,IAEA,EAAA1D,IAAA,OAAAwB,MAIA,WAAO,IAAAmC,EAAA,KA8DH,OA5DA9D,KAAK4D,SAASG,UAAYjD,EAAc,MAAO,CAAEc,UAAW,mBAG5D5B,KAAK4D,SAASI,UAAYlD,EAAc,SAAU,CAC9Cc,UAAW,qBACXqC,UAAW,iBACXpC,UAAWuB,EACXc,QAAS,WAAF,OAAQJ,EAAKK,YAAY,IAIpCnE,KAAK4D,SAASQ,OAAStD,EAAc,MAAO,CAAEc,UAAW,mBAGzD5B,KAAK4D,SAASS,OAASvD,EAAc,MAAO,CAAEc,UAAW,kBAAoB,CACzEd,EAAc,MAAO,CAAEc,UAAW,iBAAmB5B,KAAKsD,OAAOG,SACjE3C,EAAc,SAAU,CACpBc,UAAW,sBACXqC,UAAW,kBACXpC,UA/CO,oUAoDf7B,KAAK4D,SAASU,SAAWxD,EAAc,MAAO,CAAEc,UAAW,qBAG3D5B,KAAK4D,SAASW,eAAiBzD,EAAc,MAAO,CAAEc,UAAW,2BAA6B,CAC1Fd,EAAc,WAAY,CACtBc,UAAW,gBACX4C,YAAa,oBACbC,KAAM,EACNC,UAAW,SAACC,GAAC,OAAKb,EAAKc,mBAAmBD,EAAE,IAEhD7D,EAAc,SAAU,CACpBc,UAAW,mBACXqC,UAAW,eACXpC,UAtEI,0SAuEJqC,QAAS,WAAF,OAAQJ,EAAKe,iBAAiB,MAK7C7E,KAAK4D,SAASQ,OAAO1B,YAAY1C,KAAK4D,SAASS,QAC/CrE,KAAK4D,SAASQ,OAAO1B,YAAY1C,KAAK4D,SAASU,UAC/CtE,KAAK4D,SAASQ,OAAO1B,YAAY1C,KAAK4D,SAASW,gBAG/CvE,KAAK8E,oBAGL9E,KAAK4D,SAASG,UAAUrB,YAAY1C,KAAK4D,SAASI,WAClDhE,KAAK4D,SAASG,UAAUrB,YAAY1C,KAAK4D,SAASQ,QAGlDpE,KAAK+E,oBAGLzD,SAAS0D,KAAKtC,YAAY1C,KAAK4D,SAASG,WAEjC/D,KAAK4D,QAChB,GAEA,CAAAzD,IAAA,oBAAAwB,MAGA,WACI,GAAI3B,KAAKsD,OAAOI,aAAc,CAC1B,IAAM1B,EAAQV,SAASR,cAAc,SACrCkB,EAAMiD,YAAc,yDAAHC,OAEQlF,KAAKsD,OAAOI,aAAY,yCAAAwB,OACzBlF,KAAKmF,YAAYnF,KAAKsD,OAAOI,aAAc,IAAG,0CAAAwB,OAC7ClF,KAAKoF,aAAapF,KAAKsD,OAAOI,aAAc,IAAG,wBAGxEpC,SAAS+D,KAAK3C,YAAYV,EAC9B,CACJ,GAEA,CAAA7B,IAAA,aAAAwB,MAGA,WAAa,IAAA2D,EAAA,KACTtF,KAAK2D,QAAU3D,KAAK2D,OAEhB3D,KAAK2D,QACL3D,KAAK4D,SAASQ,OAAOmB,UAAUC,IAAI,UACnCxF,KAAK4D,SAASI,UAAUnC,UA9Hf,8RA+HT7B,KAAK4D,SAASI,UAAU1B,aAAa,gBAAiB,QAGtDmD,YAAW,WACPH,EAAK1B,SAASW,eAAemB,cAAc,kBAAkBC,OACjE,GAAG,KAGC3F,KAAK6D,cAAc+B,QACnB5F,KAAK6D,cAAc+B,WAGvB5F,KAAK4D,SAASQ,OAAOmB,UAAUM,OAAO,UACtC7F,KAAK4D,SAASI,UAAUnC,UAAYuB,EACpCpD,KAAK4D,SAASI,UAAU1B,aAAa,gBAAiB,SAGlDtC,KAAK6D,cAAciC,SACnB9F,KAAK6D,cAAciC,UAG/B,GAEA,CAAA3F,IAAA,oBAAAwB,MAGA,WACI,IAAMoE,EAAiBjF,EAAc,MAAO,CACxCc,UAAW,uBACZ,iBAAFsD,OAAmBlF,KAAKsD,OAAOG,QAAO,gCAEvCzD,KAAK4D,SAASU,SAAS5B,YAAYqD,EACvC,GAEA,CAAA5F,IAAA,aAAAwB,MAKA,SAAWqE,GAAsB,ID/GVC,ECgHbC,EAAUpF,EAAc,MAAO,CACjCc,UAAW,mBAAFsD,OAFMjE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,QAGnB,CACC+E,EACAlF,EAAc,MAAO,CACjBc,UAAW,yBDrHAqE,ECsHD,IAAIE,KDrHnBF,EAAKG,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,gBC2H1D,OAHAtG,KAAK4D,SAASU,SAAS5B,YAAYwD,GACnCpD,EAAe9C,KAAK4D,SAASU,UAEtB4B,CACX,GAEA,CAAA/F,IAAA,sBAAAwB,MAGA,WAEI3B,KAAKuG,sBAEL,IAAMC,EAAkB1F,EAAc,MAAO,CAAEc,UAAW,kBAAoB,CAC1Ed,EAAc,MAAO,CAAEc,UAAW,uBAClCd,EAAc,MAAO,CAAEc,UAAW,uBAClCd,EAAc,MAAO,CAAEc,UAAW,yBAGtC5B,KAAK4D,SAAS4C,gBAAkBA,EAChCxG,KAAK4D,SAASU,SAAS5B,YAAY8D,GACnC1D,EAAe9C,KAAK4D,SAASU,SACjC,GAEA,CAAAnE,IAAA,sBAAAwB,MAGA,WACQ3B,KAAK4D,SAAS4C,kBACdxG,KAAK4D,SAAS4C,gBAAgBX,SAC9B7F,KAAK4D,SAAS4C,gBAAkB,KAExC,GAEA,CAAArG,IAAA,kBAAAwB,MAGA,WACI,IAAM8E,EAAQzG,KAAK4D,SAASW,eAAemB,cAAc,kBACnDQ,EAAUO,EAAM9E,MAAM+E,OAExBR,IAEIlG,KAAK6D,cAAc8C,eACnB3G,KAAK6D,cAAc8C,cAAcT,GAIrCO,EAAM9E,MAAQ,GACd8E,EAAMzE,MAAM4E,OAAS,OACrBH,EAAMd,QAEd,GAEA,CAAAxF,IAAA,qBAAAwB,MAIA,SAAmBkF,GACf,IAAMJ,EAAQI,EAAMC,OAGpBrB,YAAW,WACPgB,EAAMzE,MAAM4E,OAAS,OACrBH,EAAMzE,MAAM4E,OAASG,KAAKC,IAAIP,EAAMvD,aAAc,KAAO,IAC7D,GAAG,GAGe,UAAd2D,EAAM1G,KAAoB0G,EAAMI,WAChCJ,EAAMK,iBACNlH,KAAK6E,kBAEb,GAEA,CAAA1E,IAAA,KAAAwB,MAKA,SAAGkF,EAAOM,GACNnH,KAAK6D,cAAc,KAADqB,OAAM2B,EAAMO,OAAO,GAAGC,cAAgBR,EAAMS,MAAM,KAAQH,CAChF,GAEA,CAAAhH,IAAA,eAAAwB,MAMA,SAAa4F,EAAOC,GAChB,IAAMC,EAAMC,SAASH,EAAMI,QAAQ,IAAK,IAAK,IACvCC,EAAMb,KAAKc,MAAM,KAAOL,GACxBM,GAAKL,GAAO,IAAMG,EAClBG,GAAKN,GAAO,EAAI,KAAUG,EAC1BI,GAAW,IAANP,GAAkBG,EAE7B,MAAO,KACH,SACkC,OAAjCE,EAAI,IAAMA,EAAI,EAAI,EAAIA,EAAI,KACO,KAAjCC,EAAI,IAAMA,EAAI,EAAI,EAAIA,EAAI,MAC1BC,EAAI,IAAMA,EAAI,EAAI,EAAIA,EAAI,MAC7BC,SAAS,IAAIX,MAAM,EACzB,GAEA,CAAAnH,IAAA,cAAAwB,MAMA,SAAY4F,EAAOC,GACf,IAAMC,EAAMC,SAASH,EAAMI,QAAQ,IAAK,IAAK,IACvCC,EAAMb,KAAKc,MAAM,KAAOL,GACxBM,GAAKL,GAAO,IAAMG,EAClBG,GAAKN,GAAO,EAAI,KAAUG,EAC1BI,GAAW,IAANP,GAAkBG,EAE7B,MAAO,KACH,SACkB,OAAjBE,EAAI,EAAIA,EAAI,GACK,KAAjBC,EAAI,EAAIA,EAAI,IACZC,EAAI,EAAIA,EAAI,IACfC,SAAS,IAAIX,MAAM,EACzB,oFAAC,CAxRiB,sPCzBtBY,EAAA,kBAAAvD,CAAA,MAAAwD,EAAAxD,EAAA,GAAAyD,EAAA/H,OAAAM,UAAA0H,EAAAD,EAAAxH,eAAAR,EAAAC,OAAAC,gBAAA,SAAA6H,EAAAxD,EAAAyD,GAAAD,EAAAxD,GAAAyD,EAAAzG,KAAA,EAAA2G,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAA/I,EAAAqI,EAAAxD,EAAAyD,GAAA,OAAA/H,OAAAC,eAAA6H,EAAAxD,EAAA,CAAAhD,MAAAyG,EAAA7H,YAAA,EAAAuI,cAAA,EAAAC,UAAA,IAAAZ,EAAAxD,EAAA,KAAA7E,EAAA,aAAAqI,GAAArI,EAAA,SAAAqI,EAAAxD,EAAAyD,GAAA,OAAAD,EAAAxD,GAAAyD,CAAA,WAAAY,EAAAb,EAAAxD,EAAAyD,EAAAC,GAAA,IAAAC,EAAA3D,GAAAA,EAAAhE,qBAAAsI,EAAAtE,EAAAsE,EAAAT,EAAAnI,OAAA6I,OAAAZ,EAAA3H,WAAA+H,EAAA,IAAAS,EAAAd,GAAA,WAAAjI,EAAAoI,EAAA,WAAA7G,MAAAyH,EAAAjB,EAAAC,EAAAM,KAAAF,CAAA,UAAAa,EAAAlB,EAAAxD,EAAAyD,GAAA,WAAAkB,KAAA,SAAAC,IAAApB,EAAAtH,KAAA8D,EAAAyD,GAAA,OAAAD,GAAA,OAAAmB,KAAA,QAAAC,IAAApB,EAAA,EAAAxD,EAAAqE,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAjK,EAAAiK,EAAAvB,GAAA,8BAAAwB,EAAA3J,OAAA4J,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA9B,GAAAC,EAAAxH,KAAAqJ,EAAA1B,KAAAuB,EAAAG,GAAA,IAAAE,EAAAN,EAAAnJ,UAAAsI,EAAAtI,UAAAN,OAAA6I,OAAAa,GAAA,SAAAM,EAAAlC,GAAA,0BAAA3G,SAAA,SAAAmD,GAAA7E,EAAAqI,EAAAxD,GAAA,SAAAwD,GAAA,YAAAmC,QAAA3F,EAAAwD,EAAA,gBAAAoC,EAAApC,EAAAxD,GAAA,SAAA6F,EAAApC,EAAAhI,EAAAkI,EAAAE,GAAA,IAAAE,EAAAW,EAAAlB,EAAAC,GAAAD,EAAA/H,GAAA,aAAAsI,EAAAY,KAAA,KAAAV,EAAAF,EAAAa,IAAAC,EAAAZ,EAAAjH,MAAA,OAAA6H,GAAA,UAAA1H,EAAA0H,IAAAnB,EAAAxH,KAAA2I,EAAA,WAAA7E,EAAA8F,QAAAjB,EAAAkB,SAAAC,MAAA,SAAAxC,GAAAqC,EAAA,OAAArC,EAAAG,EAAAE,EAAA,aAAAL,GAAAqC,EAAA,QAAArC,EAAAG,EAAAE,EAAA,IAAA7D,EAAA8F,QAAAjB,GAAAmB,MAAA,SAAAxC,GAAAS,EAAAjH,MAAAwG,EAAAG,EAAAM,EAAA,aAAAT,GAAA,OAAAqC,EAAA,QAAArC,EAAAG,EAAAE,EAAA,IAAAA,EAAAE,EAAAa,IAAA,KAAAnB,EAAAhI,EAAA,gBAAAuB,MAAA,SAAAwG,EAAAE,GAAA,SAAAuC,IAAA,WAAAjG,GAAA,SAAAA,EAAAyD,GAAAoC,EAAArC,EAAAE,EAAA1D,EAAAyD,EAAA,WAAAA,EAAAA,EAAAA,EAAAuC,KAAAC,EAAAA,GAAAA,GAAA,aAAAxB,EAAAzE,EAAAyD,EAAAC,GAAA,IAAAjI,EAAAoJ,EAAA,gBAAAlB,EAAAE,GAAA,GAAApI,IAAAsJ,EAAA,MAAAmB,MAAA,mCAAAzK,IAAAuJ,EAAA,cAAArB,EAAA,MAAAE,EAAA,OAAA7G,MAAAwG,EAAA2C,MAAA,OAAAzC,EAAA0C,OAAAzC,EAAAD,EAAAkB,IAAAf,IAAA,KAAAE,EAAAL,EAAA2C,SAAA,GAAAtC,EAAA,KAAAE,EAAAqC,EAAAvC,EAAAL,GAAA,GAAAO,EAAA,IAAAA,IAAAgB,EAAA,gBAAAhB,CAAA,cAAAP,EAAA0C,OAAA1C,EAAA6C,KAAA7C,EAAA8C,MAAA9C,EAAAkB,SAAA,aAAAlB,EAAA0C,OAAA,IAAA3K,IAAAoJ,EAAA,MAAApJ,EAAAuJ,EAAAtB,EAAAkB,IAAAlB,EAAA+C,kBAAA/C,EAAAkB,IAAA,gBAAAlB,EAAA0C,QAAA1C,EAAAgD,OAAA,SAAAhD,EAAAkB,KAAAnJ,EAAAsJ,EAAA,IAAAK,EAAAV,EAAA1E,EAAAyD,EAAAC,GAAA,cAAA0B,EAAAT,KAAA,IAAAlJ,EAAAiI,EAAAyC,KAAAnB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAjI,MAAAoI,EAAAR,IAAAuB,KAAAzC,EAAAyC,KAAA,WAAAf,EAAAT,OAAAlJ,EAAAuJ,EAAAtB,EAAA0C,OAAA,QAAA1C,EAAAkB,IAAAQ,EAAAR,IAAA,YAAA0B,EAAAtG,EAAAyD,GAAA,IAAAC,EAAAD,EAAA2C,OAAA3K,EAAAuE,EAAA8D,SAAAJ,GAAA,GAAAjI,IAAA+H,EAAA,OAAAC,EAAA4C,SAAA,eAAA3C,GAAA1D,EAAA8D,SAAA,SAAAL,EAAA2C,OAAA,SAAA3C,EAAAmB,IAAApB,EAAA8C,EAAAtG,EAAAyD,GAAA,UAAAA,EAAA2C,SAAA,WAAA1C,IAAAD,EAAA2C,OAAA,QAAA3C,EAAAmB,IAAA,IAAA+B,UAAA,oCAAAjD,EAAA,aAAAuB,EAAA,IAAAtB,EAAAe,EAAAjJ,EAAAuE,EAAA8D,SAAAL,EAAAmB,KAAA,aAAAjB,EAAAgB,KAAA,OAAAlB,EAAA2C,OAAA,QAAA3C,EAAAmB,IAAAjB,EAAAiB,IAAAnB,EAAA4C,SAAA,KAAApB,EAAA,IAAApB,EAAAF,EAAAiB,IAAA,OAAAf,EAAAA,EAAAsC,MAAA1C,EAAAzD,EAAA4G,YAAA/C,EAAA7G,MAAAyG,EAAAoD,KAAA7G,EAAA8G,QAAA,WAAArD,EAAA2C,SAAA3C,EAAA2C,OAAA,OAAA3C,EAAAmB,IAAApB,GAAAC,EAAA4C,SAAA,KAAApB,GAAApB,GAAAJ,EAAA2C,OAAA,QAAA3C,EAAAmB,IAAA,IAAA+B,UAAA,oCAAAlD,EAAA4C,SAAA,KAAApB,EAAA,UAAA8B,EAAAvD,GAAA,IAAAxD,EAAA,CAAAgH,OAAAxD,EAAA,SAAAA,IAAAxD,EAAAiH,SAAAzD,EAAA,SAAAA,IAAAxD,EAAAkH,WAAA1D,EAAA,GAAAxD,EAAAmH,SAAA3D,EAAA,SAAA4D,WAAAC,KAAArH,EAAA,UAAAsH,EAAA9D,GAAA,IAAAxD,EAAAwD,EAAA+D,YAAA,GAAAvH,EAAA2E,KAAA,gBAAA3E,EAAA4E,IAAApB,EAAA+D,WAAAvH,CAAA,UAAAwE,EAAAhB,GAAA,KAAA4D,WAAA,EAAAJ,OAAA,SAAAxD,EAAA3G,QAAAkK,EAAA,WAAAS,OAAA,YAAAhC,EAAAxF,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAyD,EAAAzD,EAAA6D,GAAA,GAAAJ,EAAA,OAAAA,EAAAvH,KAAA8D,GAAA,sBAAAA,EAAA6G,KAAA,OAAA7G,EAAA,IAAAyH,MAAAzH,EAAAzD,QAAA,KAAAd,GAAA,EAAAkI,EAAA,SAAAkD,IAAA,OAAApL,EAAAuE,EAAAzD,QAAA,GAAAmH,EAAAxH,KAAA8D,EAAAvE,GAAA,OAAAoL,EAAA7J,MAAAgD,EAAAvE,GAAAoL,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAA7J,MAAAwG,EAAAqD,EAAAV,MAAA,EAAAU,CAAA,SAAAlD,EAAAkD,KAAAlD,CAAA,YAAAgD,UAAAxJ,EAAA6C,GAAA,2BAAAkF,EAAAlJ,UAAAmJ,EAAA1J,EAAAgK,EAAA,eAAAzI,MAAAmI,EAAAhB,cAAA,IAAA1I,EAAA0J,EAAA,eAAAnI,MAAAkI,EAAAf,cAAA,IAAAe,EAAAwC,YAAAvM,EAAAgK,EAAAlB,EAAA,qBAAAjE,EAAA2H,oBAAA,SAAAnE,GAAA,IAAAxD,EAAA,mBAAAwD,GAAAA,EAAAoE,YAAA,QAAA5H,IAAAA,IAAAkF,GAAA,uBAAAlF,EAAA0H,aAAA1H,EAAA6H,MAAA,EAAA7H,EAAA8H,KAAA,SAAAtE,GAAA,OAAA9H,OAAAqM,eAAArM,OAAAqM,eAAAvE,EAAA2B,IAAA3B,EAAAwE,UAAA7C,EAAAhK,EAAAqI,EAAAS,EAAA,sBAAAT,EAAAxH,UAAAN,OAAA6I,OAAAkB,GAAAjC,CAAA,EAAAxD,EAAAiI,MAAA,SAAAzE,GAAA,OAAAuC,QAAAvC,EAAA,EAAAkC,EAAAE,EAAA5J,WAAAb,EAAAyK,EAAA5J,UAAA+H,GAAA,0BAAA/D,EAAA4F,cAAAA,EAAA5F,EAAAkI,MAAA,SAAA1E,EAAAC,EAAAC,EAAAjI,EAAAkI,QAAA,IAAAA,IAAAA,EAAAwE,SAAA,IAAAtE,EAAA,IAAA+B,EAAAvB,EAAAb,EAAAC,EAAAC,EAAAjI,GAAAkI,GAAA,OAAA3D,EAAA2H,oBAAAlE,GAAAI,EAAAA,EAAAgD,OAAAb,MAAA,SAAAxC,GAAA,OAAAA,EAAA2C,KAAA3C,EAAAxG,MAAA6G,EAAAgD,MAAA,KAAAnB,EAAAD,GAAAtK,EAAAsK,EAAAxB,EAAA,aAAA9I,EAAAsK,EAAA5B,GAAA,0BAAA1I,EAAAsK,EAAA,qDAAAzF,EAAAoI,KAAA,SAAA5E,GAAA,IAAAxD,EAAAtE,OAAA8H,GAAAC,EAAA,WAAAC,KAAA1D,EAAAyD,EAAA4D,KAAA3D,GAAA,OAAAD,EAAA4E,UAAA,SAAAxB,IAAA,KAAApD,EAAAlH,QAAA,KAAAiH,EAAAC,EAAA6E,MAAA,GAAA9E,KAAAxD,EAAA,OAAA6G,EAAA7J,MAAAwG,EAAAqD,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA7G,EAAAwF,OAAAA,EAAAhB,EAAAxI,UAAA,CAAA4L,YAAApD,EAAAgD,MAAA,SAAAxH,GAAA,QAAAuI,KAAA,OAAA1B,KAAA,OAAAN,KAAA,KAAAC,MAAAhD,EAAA,KAAA2C,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAAxB,IAAApB,EAAA,KAAA4D,WAAAvK,QAAAyK,IAAAtH,EAAA,QAAAyD,KAAA,WAAAA,EAAAhB,OAAA,IAAAiB,EAAAxH,KAAA,KAAAuH,KAAAgE,OAAAhE,EAAAd,MAAA,WAAAc,GAAAD,EAAA,EAAAgF,KAAA,gBAAArC,MAAA,MAAA3C,EAAA,KAAA4D,WAAA,GAAAG,WAAA,aAAA/D,EAAAmB,KAAA,MAAAnB,EAAAoB,IAAA,YAAA6D,IAAA,EAAAhC,kBAAA,SAAAzG,GAAA,QAAAmG,KAAA,MAAAnG,EAAA,IAAAyD,EAAA,cAAAiF,EAAAhF,EAAAjI,GAAA,OAAAoI,EAAAc,KAAA,QAAAd,EAAAe,IAAA5E,EAAAyD,EAAAoD,KAAAnD,EAAAjI,IAAAgI,EAAA2C,OAAA,OAAA3C,EAAAmB,IAAApB,KAAA/H,CAAA,SAAAA,EAAA,KAAA2L,WAAA7K,OAAA,EAAAd,GAAA,IAAAA,EAAA,KAAAkI,EAAA,KAAAyD,WAAA3L,GAAAoI,EAAAF,EAAA4D,WAAA,YAAA5D,EAAAqD,OAAA,OAAA0B,EAAA,UAAA/E,EAAAqD,QAAA,KAAAuB,KAAA,KAAAxE,EAAAL,EAAAxH,KAAAyH,EAAA,YAAAM,EAAAP,EAAAxH,KAAAyH,EAAA,iBAAAI,GAAAE,EAAA,SAAAsE,KAAA5E,EAAAsD,SAAA,OAAAyB,EAAA/E,EAAAsD,UAAA,WAAAsB,KAAA5E,EAAAuD,WAAA,OAAAwB,EAAA/E,EAAAuD,WAAA,SAAAnD,GAAA,QAAAwE,KAAA5E,EAAAsD,SAAA,OAAAyB,EAAA/E,EAAAsD,UAAA,YAAAhD,EAAA,MAAAiC,MAAA,kDAAAqC,KAAA5E,EAAAuD,WAAA,OAAAwB,EAAA/E,EAAAuD,WAAA,KAAAR,OAAA,SAAAlD,EAAAxD,GAAA,QAAAyD,EAAA,KAAA2D,WAAA7K,OAAA,EAAAkH,GAAA,IAAAA,EAAA,KAAAhI,EAAA,KAAA2L,WAAA3D,GAAA,GAAAhI,EAAAuL,QAAA,KAAAuB,MAAA7E,EAAAxH,KAAAT,EAAA,oBAAA8M,KAAA9M,EAAAyL,WAAA,KAAAvD,EAAAlI,EAAA,OAAAkI,IAAA,UAAAH,GAAA,aAAAA,IAAAG,EAAAqD,QAAAhH,GAAAA,GAAA2D,EAAAuD,aAAAvD,EAAA,UAAAE,EAAAF,EAAAA,EAAA4D,WAAA,UAAA1D,EAAAc,KAAAnB,EAAAK,EAAAe,IAAA5E,EAAA2D,GAAA,KAAAyC,OAAA,YAAAS,KAAAlD,EAAAuD,WAAAjC,GAAA,KAAA0D,SAAA9E,EAAA,EAAA8E,SAAA,SAAAnF,EAAAxD,GAAA,aAAAwD,EAAAmB,KAAA,MAAAnB,EAAAoB,IAAA,gBAAApB,EAAAmB,MAAA,aAAAnB,EAAAmB,KAAA,KAAAkC,KAAArD,EAAAoB,IAAA,WAAApB,EAAAmB,MAAA,KAAA8D,KAAA,KAAA7D,IAAApB,EAAAoB,IAAA,KAAAwB,OAAA,cAAAS,KAAA,kBAAArD,EAAAmB,MAAA3E,IAAA,KAAA6G,KAAA7G,GAAAiF,CAAA,EAAA2D,OAAA,SAAApF,GAAA,QAAAxD,EAAA,KAAAoH,WAAA7K,OAAA,EAAAyD,GAAA,IAAAA,EAAA,KAAAyD,EAAA,KAAA2D,WAAApH,GAAA,GAAAyD,EAAAyD,aAAA1D,EAAA,YAAAmF,SAAAlF,EAAA8D,WAAA9D,EAAA0D,UAAAG,EAAA7D,GAAAwB,CAAA,kBAAAzB,GAAA,QAAAxD,EAAA,KAAAoH,WAAA7K,OAAA,EAAAyD,GAAA,IAAAA,EAAA,KAAAyD,EAAA,KAAA2D,WAAApH,GAAA,GAAAyD,EAAAuD,SAAAxD,EAAA,KAAAE,EAAAD,EAAA8D,WAAA,aAAA7D,EAAAiB,KAAA,KAAAlJ,EAAAiI,EAAAkB,IAAA0C,EAAA7D,EAAA,QAAAhI,CAAA,QAAAyK,MAAA,0BAAA2C,cAAA,SAAA7I,EAAAyD,EAAAC,GAAA,YAAA2C,SAAA,CAAAvC,SAAA0B,EAAAxF,GAAA4G,WAAAnD,EAAAqD,QAAApD,GAAA,cAAA0C,SAAA,KAAAxB,IAAApB,GAAAyB,CAAA,GAAAjF,CAAA,UAAA8I,EAAApF,EAAAF,EAAAxD,EAAAyD,EAAAhI,EAAAoI,EAAAE,GAAA,QAAAJ,EAAAD,EAAAG,GAAAE,GAAAE,EAAAN,EAAA3G,KAAA,OAAA0G,GAAA,YAAA1D,EAAA0D,EAAA,CAAAC,EAAAwC,KAAA3C,EAAAS,GAAAkE,QAAArC,QAAA7B,GAAA+B,KAAAvC,EAAAhI,EAAA,UAAAsN,EAAArF,GAAA,sBAAAF,EAAA,KAAAxD,EAAA1D,UAAA,WAAA6L,SAAA,SAAA1E,EAAAhI,GAAA,IAAAoI,EAAAH,EAAAsF,MAAAxF,EAAAxD,GAAA,SAAAiJ,EAAAvF,GAAAoF,EAAAjF,EAAAJ,EAAAhI,EAAAwN,EAAAC,EAAA,OAAAxF,EAAA,UAAAwF,EAAAxF,GAAAoF,EAAAjF,EAAAJ,EAAAhI,EAAAwN,EAAAC,EAAA,QAAAxF,EAAA,CAAAuF,OAAA,OAUO,SAAeE,EAAWC,EAAAC,GAAA,OAAAC,EAAAN,MAAC,KAAD1M,UAAA,CAyBjC,SAAAgN,IAFC,OAEDA,EAAAP,EAAAxF,IAAAuE,MAzBO,SAAAyB,EAA2BC,EAAQjI,GAAO,IAAAkI,EAAAC,EAAAC,EAAAC,EAAAtN,UAAA,OAAAiH,IAAAc,MAAA,SAAAwF,GAAA,cAAAA,EAAAtB,KAAAsB,EAAAhD,MAAA,OAA0B,OAAxB4C,EAAmBG,EAAArN,OAAA,QAAAC,IAAAoN,EAAA,GAAAA,EAAA,GAAG,GAAEC,EAAAtB,KAAA,EAAAsB,EAAAhD,KAAA,EAE5CiD,MAAM,GAADvJ,OAAIiJ,EAAM,aAAa,CAC/CpD,OAAQ,OACR2D,QAAS,CACL,eAAgB,oBAEpB1J,KAAM2J,KAAKC,UAAU,CACjB1I,QAAAA,EACAkI,oBAAAA,MAEN,OATY,IAARC,EAAQG,EAAAtD,MAWA2D,GAAI,CAAFL,EAAAhD,KAAA,gBAAAgD,EAAAhD,KAAA,EACY6C,EAASrI,OAAM,OAAxB,MAATsI,EAASE,EAAAtD,KACT,IAAIL,MAAM,cAAD3F,OAAemJ,EAASS,OAAM,OAAA5J,OAAMoJ,IAAY,eAAAE,EAAAhD,KAAA,GAGtD6C,EAASU,OAAM,eAAAP,EAAAnD,OAAA,SAAAmD,EAAAtD,MAAA,QAE0B,MAF1BsD,EAAAtB,KAAA,GAAAsB,EAAAQ,GAAAR,EAAA,SAE5BS,QAAQC,MAAM,gCAA+BV,EAAAQ,IAASR,EAAAQ,GAAA,yBAAAR,EAAArB,OAAA,GAAAe,EAAA,mBAG7DD,EAAAN,MAAA,KAAA1M,UAAA,CAOM,SAAekO,EAAoBC,GAAA,OAAAC,EAAA1B,MAAC,KAAD1M,UAAA,CAgBzC,SAAAoO,IAAA,OAAAA,EAAA3B,EAAAxF,IAAAuE,MAhBM,SAAA6C,EAAoCnB,GAAM,IAAAoB,EAAAC,EAAAnB,EAAA,OAAAnG,IAAAc,MAAA,SAAAyG,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAjE,MAAA,OAGmB,OAHnBiE,EAAAvC,KAAA,EAEnCqC,EAAa,IAAIG,gBACjBF,EAAY/J,YAAW,kBAAM8J,EAAWI,OAAO,GAAE,KAAKF,EAAAjE,KAAA,EAErCiD,MAAM,GAADvJ,OAAIiJ,EAAM,oBAAoB,CACtDpD,OAAQ,MACR6E,OAAQL,EAAWK,SACrB,OAEsB,OALlBvB,EAAQoB,EAAAvE,KAKd2E,aAAaL,GAAWC,EAAApE,OAAA,SACjBgD,EAASQ,IAAE,QAEqC,OAFrCY,EAAAvC,KAAA,GAAAuC,EAAAT,GAAAS,EAAA,SAElBR,QAAQC,MAAM,iCAAgCO,EAAAT,IAASS,EAAApE,OAAA,UAChD,GAAK,yBAAAoE,EAAAtC,OAAA,GAAAmC,EAAA,oBAEnB3B,MAAA,KAAA1M,UAAA,oPCxDDiH,EAAA,kBAAAvD,CAAA,MAAAwD,EAAAxD,EAAA,GAAAyD,EAAA/H,OAAAM,UAAA0H,EAAAD,EAAAxH,eAAAR,EAAAC,OAAAC,gBAAA,SAAA6H,EAAAxD,EAAAyD,GAAAD,EAAAxD,GAAAyD,EAAAzG,KAAA,EAAA2G,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAA/I,EAAAqI,EAAAxD,EAAAyD,GAAA,OAAA/H,OAAAC,eAAA6H,EAAAxD,EAAA,CAAAhD,MAAAyG,EAAA7H,YAAA,EAAAuI,cAAA,EAAAC,UAAA,IAAAZ,EAAAxD,EAAA,KAAA7E,EAAA,aAAAqI,GAAArI,EAAA,SAAAqI,EAAAxD,EAAAyD,GAAA,OAAAD,EAAAxD,GAAAyD,CAAA,WAAAY,EAAAb,EAAAxD,EAAAyD,EAAAC,GAAA,IAAAC,EAAA3D,GAAAA,EAAAhE,qBAAAsI,EAAAtE,EAAAsE,EAAAT,EAAAnI,OAAA6I,OAAAZ,EAAA3H,WAAA+H,EAAA,IAAAS,EAAAd,GAAA,WAAAjI,EAAAoI,EAAA,WAAA7G,MAAAyH,EAAAjB,EAAAC,EAAAM,KAAAF,CAAA,UAAAa,EAAAlB,EAAAxD,EAAAyD,GAAA,WAAAkB,KAAA,SAAAC,IAAApB,EAAAtH,KAAA8D,EAAAyD,GAAA,OAAAD,GAAA,OAAAmB,KAAA,QAAAC,IAAApB,EAAA,EAAAxD,EAAAqE,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAjK,EAAAiK,EAAAvB,GAAA,8BAAAwB,EAAA3J,OAAA4J,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA9B,GAAAC,EAAAxH,KAAAqJ,EAAA1B,KAAAuB,EAAAG,GAAA,IAAAE,EAAAN,EAAAnJ,UAAAsI,EAAAtI,UAAAN,OAAA6I,OAAAa,GAAA,SAAAM,EAAAlC,GAAA,0BAAA3G,SAAA,SAAAmD,GAAA7E,EAAAqI,EAAAxD,GAAA,SAAAwD,GAAA,YAAAmC,QAAA3F,EAAAwD,EAAA,gBAAAoC,EAAApC,EAAAxD,GAAA,SAAA6F,EAAApC,EAAAhI,EAAAkI,EAAAE,GAAA,IAAAE,EAAAW,EAAAlB,EAAAC,GAAAD,EAAA/H,GAAA,aAAAsI,EAAAY,KAAA,KAAAV,EAAAF,EAAAa,IAAAC,EAAAZ,EAAAjH,MAAA,OAAA6H,GAAA,UAAA1H,EAAA0H,IAAAnB,EAAAxH,KAAA2I,EAAA,WAAA7E,EAAA8F,QAAAjB,EAAAkB,SAAAC,MAAA,SAAAxC,GAAAqC,EAAA,OAAArC,EAAAG,EAAAE,EAAA,aAAAL,GAAAqC,EAAA,QAAArC,EAAAG,EAAAE,EAAA,IAAA7D,EAAA8F,QAAAjB,GAAAmB,MAAA,SAAAxC,GAAAS,EAAAjH,MAAAwG,EAAAG,EAAAM,EAAA,aAAAT,GAAA,OAAAqC,EAAA,QAAArC,EAAAG,EAAAE,EAAA,IAAAA,EAAAE,EAAAa,IAAA,KAAAnB,EAAAhI,EAAA,gBAAAuB,MAAA,SAAAwG,EAAAE,GAAA,SAAAuC,IAAA,WAAAjG,GAAA,SAAAA,EAAAyD,GAAAoC,EAAArC,EAAAE,EAAA1D,EAAAyD,EAAA,WAAAA,EAAAA,EAAAA,EAAAuC,KAAAC,EAAAA,GAAAA,GAAA,aAAAxB,EAAAzE,EAAAyD,EAAAC,GAAA,IAAAjI,EAAAoJ,EAAA,gBAAAlB,EAAAE,GAAA,GAAApI,IAAAsJ,EAAA,MAAAmB,MAAA,mCAAAzK,IAAAuJ,EAAA,cAAArB,EAAA,MAAAE,EAAA,OAAA7G,MAAAwG,EAAA2C,MAAA,OAAAzC,EAAA0C,OAAAzC,EAAAD,EAAAkB,IAAAf,IAAA,KAAAE,EAAAL,EAAA2C,SAAA,GAAAtC,EAAA,KAAAE,EAAAqC,EAAAvC,EAAAL,GAAA,GAAAO,EAAA,IAAAA,IAAAgB,EAAA,gBAAAhB,CAAA,cAAAP,EAAA0C,OAAA1C,EAAA6C,KAAA7C,EAAA8C,MAAA9C,EAAAkB,SAAA,aAAAlB,EAAA0C,OAAA,IAAA3K,IAAAoJ,EAAA,MAAApJ,EAAAuJ,EAAAtB,EAAAkB,IAAAlB,EAAA+C,kBAAA/C,EAAAkB,IAAA,gBAAAlB,EAAA0C,QAAA1C,EAAAgD,OAAA,SAAAhD,EAAAkB,KAAAnJ,EAAAsJ,EAAA,IAAAK,EAAAV,EAAA1E,EAAAyD,EAAAC,GAAA,cAAA0B,EAAAT,KAAA,IAAAlJ,EAAAiI,EAAAyC,KAAAnB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,gBAAAjI,MAAAoI,EAAAR,IAAAuB,KAAAzC,EAAAyC,KAAA,WAAAf,EAAAT,OAAAlJ,EAAAuJ,EAAAtB,EAAA0C,OAAA,QAAA1C,EAAAkB,IAAAQ,EAAAR,IAAA,YAAA0B,EAAAtG,EAAAyD,GAAA,IAAAC,EAAAD,EAAA2C,OAAA3K,EAAAuE,EAAA8D,SAAAJ,GAAA,GAAAjI,IAAA+H,EAAA,OAAAC,EAAA4C,SAAA,eAAA3C,GAAA1D,EAAA8D,SAAA,SAAAL,EAAA2C,OAAA,SAAA3C,EAAAmB,IAAApB,EAAA8C,EAAAtG,EAAAyD,GAAA,UAAAA,EAAA2C,SAAA,WAAA1C,IAAAD,EAAA2C,OAAA,QAAA3C,EAAAmB,IAAA,IAAA+B,UAAA,oCAAAjD,EAAA,aAAAuB,EAAA,IAAAtB,EAAAe,EAAAjJ,EAAAuE,EAAA8D,SAAAL,EAAAmB,KAAA,aAAAjB,EAAAgB,KAAA,OAAAlB,EAAA2C,OAAA,QAAA3C,EAAAmB,IAAAjB,EAAAiB,IAAAnB,EAAA4C,SAAA,KAAApB,EAAA,IAAApB,EAAAF,EAAAiB,IAAA,OAAAf,EAAAA,EAAAsC,MAAA1C,EAAAzD,EAAA4G,YAAA/C,EAAA7G,MAAAyG,EAAAoD,KAAA7G,EAAA8G,QAAA,WAAArD,EAAA2C,SAAA3C,EAAA2C,OAAA,OAAA3C,EAAAmB,IAAApB,GAAAC,EAAA4C,SAAA,KAAApB,GAAApB,GAAAJ,EAAA2C,OAAA,QAAA3C,EAAAmB,IAAA,IAAA+B,UAAA,oCAAAlD,EAAA4C,SAAA,KAAApB,EAAA,UAAA8B,EAAAvD,GAAA,IAAAxD,EAAA,CAAAgH,OAAAxD,EAAA,SAAAA,IAAAxD,EAAAiH,SAAAzD,EAAA,SAAAA,IAAAxD,EAAAkH,WAAA1D,EAAA,GAAAxD,EAAAmH,SAAA3D,EAAA,SAAA4D,WAAAC,KAAArH,EAAA,UAAAsH,EAAA9D,GAAA,IAAAxD,EAAAwD,EAAA+D,YAAA,GAAAvH,EAAA2E,KAAA,gBAAA3E,EAAA4E,IAAApB,EAAA+D,WAAAvH,CAAA,UAAAwE,EAAAhB,GAAA,KAAA4D,WAAA,EAAAJ,OAAA,SAAAxD,EAAA3G,QAAAkK,EAAA,WAAAS,OAAA,YAAAhC,EAAAxF,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAyD,EAAAzD,EAAA6D,GAAA,GAAAJ,EAAA,OAAAA,EAAAvH,KAAA8D,GAAA,sBAAAA,EAAA6G,KAAA,OAAA7G,EAAA,IAAAyH,MAAAzH,EAAAzD,QAAA,KAAAd,GAAA,EAAAkI,EAAA,SAAAkD,IAAA,OAAApL,EAAAuE,EAAAzD,QAAA,GAAAmH,EAAAxH,KAAA8D,EAAAvE,GAAA,OAAAoL,EAAA7J,MAAAgD,EAAAvE,GAAAoL,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAA7J,MAAAwG,EAAAqD,EAAAV,MAAA,EAAAU,CAAA,SAAAlD,EAAAkD,KAAAlD,CAAA,YAAAgD,UAAAxJ,EAAA6C,GAAA,2BAAAkF,EAAAlJ,UAAAmJ,EAAA1J,EAAAgK,EAAA,eAAAzI,MAAAmI,EAAAhB,cAAA,IAAA1I,EAAA0J,EAAA,eAAAnI,MAAAkI,EAAAf,cAAA,IAAAe,EAAAwC,YAAAvM,EAAAgK,EAAAlB,EAAA,qBAAAjE,EAAA2H,oBAAA,SAAAnE,GAAA,IAAAxD,EAAA,mBAAAwD,GAAAA,EAAAoE,YAAA,QAAA5H,IAAAA,IAAAkF,GAAA,uBAAAlF,EAAA0H,aAAA1H,EAAA6H,MAAA,EAAA7H,EAAA8H,KAAA,SAAAtE,GAAA,OAAA9H,OAAAqM,eAAArM,OAAAqM,eAAAvE,EAAA2B,IAAA3B,EAAAwE,UAAA7C,EAAAhK,EAAAqI,EAAAS,EAAA,sBAAAT,EAAAxH,UAAAN,OAAA6I,OAAAkB,GAAAjC,CAAA,EAAAxD,EAAAiI,MAAA,SAAAzE,GAAA,OAAAuC,QAAAvC,EAAA,EAAAkC,EAAAE,EAAA5J,WAAAb,EAAAyK,EAAA5J,UAAA+H,GAAA,0BAAA/D,EAAA4F,cAAAA,EAAA5F,EAAAkI,MAAA,SAAA1E,EAAAC,EAAAC,EAAAjI,EAAAkI,QAAA,IAAAA,IAAAA,EAAAwE,SAAA,IAAAtE,EAAA,IAAA+B,EAAAvB,EAAAb,EAAAC,EAAAC,EAAAjI,GAAAkI,GAAA,OAAA3D,EAAA2H,oBAAAlE,GAAAI,EAAAA,EAAAgD,OAAAb,MAAA,SAAAxC,GAAA,OAAAA,EAAA2C,KAAA3C,EAAAxG,MAAA6G,EAAAgD,MAAA,KAAAnB,EAAAD,GAAAtK,EAAAsK,EAAAxB,EAAA,aAAA9I,EAAAsK,EAAA5B,GAAA,0BAAA1I,EAAAsK,EAAA,qDAAAzF,EAAAoI,KAAA,SAAA5E,GAAA,IAAAxD,EAAAtE,OAAA8H,GAAAC,EAAA,WAAAC,KAAA1D,EAAAyD,EAAA4D,KAAA3D,GAAA,OAAAD,EAAA4E,UAAA,SAAAxB,IAAA,KAAApD,EAAAlH,QAAA,KAAAiH,EAAAC,EAAA6E,MAAA,GAAA9E,KAAAxD,EAAA,OAAA6G,EAAA7J,MAAAwG,EAAAqD,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA7G,EAAAwF,OAAAA,EAAAhB,EAAAxI,UAAA,CAAA4L,YAAApD,EAAAgD,MAAA,SAAAxH,GAAA,QAAAuI,KAAA,OAAA1B,KAAA,OAAAN,KAAA,KAAAC,MAAAhD,EAAA,KAAA2C,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAAxB,IAAApB,EAAA,KAAA4D,WAAAvK,QAAAyK,IAAAtH,EAAA,QAAAyD,KAAA,WAAAA,EAAAhB,OAAA,IAAAiB,EAAAxH,KAAA,KAAAuH,KAAAgE,OAAAhE,EAAAd,MAAA,WAAAc,GAAAD,EAAA,EAAAgF,KAAA,gBAAArC,MAAA,MAAA3C,EAAA,KAAA4D,WAAA,GAAAG,WAAA,aAAA/D,EAAAmB,KAAA,MAAAnB,EAAAoB,IAAA,YAAA6D,IAAA,EAAAhC,kBAAA,SAAAzG,GAAA,QAAAmG,KAAA,MAAAnG,EAAA,IAAAyD,EAAA,cAAAiF,EAAAhF,EAAAjI,GAAA,OAAAoI,EAAAc,KAAA,QAAAd,EAAAe,IAAA5E,EAAAyD,EAAAoD,KAAAnD,EAAAjI,IAAAgI,EAAA2C,OAAA,OAAA3C,EAAAmB,IAAApB,KAAA/H,CAAA,SAAAA,EAAA,KAAA2L,WAAA7K,OAAA,EAAAd,GAAA,IAAAA,EAAA,KAAAkI,EAAA,KAAAyD,WAAA3L,GAAAoI,EAAAF,EAAA4D,WAAA,YAAA5D,EAAAqD,OAAA,OAAA0B,EAAA,UAAA/E,EAAAqD,QAAA,KAAAuB,KAAA,KAAAxE,EAAAL,EAAAxH,KAAAyH,EAAA,YAAAM,EAAAP,EAAAxH,KAAAyH,EAAA,iBAAAI,GAAAE,EAAA,SAAAsE,KAAA5E,EAAAsD,SAAA,OAAAyB,EAAA/E,EAAAsD,UAAA,WAAAsB,KAAA5E,EAAAuD,WAAA,OAAAwB,EAAA/E,EAAAuD,WAAA,SAAAnD,GAAA,QAAAwE,KAAA5E,EAAAsD,SAAA,OAAAyB,EAAA/E,EAAAsD,UAAA,YAAAhD,EAAA,MAAAiC,MAAA,kDAAAqC,KAAA5E,EAAAuD,WAAA,OAAAwB,EAAA/E,EAAAuD,WAAA,KAAAR,OAAA,SAAAlD,EAAAxD,GAAA,QAAAyD,EAAA,KAAA2D,WAAA7K,OAAA,EAAAkH,GAAA,IAAAA,EAAA,KAAAhI,EAAA,KAAA2L,WAAA3D,GAAA,GAAAhI,EAAAuL,QAAA,KAAAuB,MAAA7E,EAAAxH,KAAAT,EAAA,oBAAA8M,KAAA9M,EAAAyL,WAAA,KAAAvD,EAAAlI,EAAA,OAAAkI,IAAA,UAAAH,GAAA,aAAAA,IAAAG,EAAAqD,QAAAhH,GAAAA,GAAA2D,EAAAuD,aAAAvD,EAAA,UAAAE,EAAAF,EAAAA,EAAA4D,WAAA,UAAA1D,EAAAc,KAAAnB,EAAAK,EAAAe,IAAA5E,EAAA2D,GAAA,KAAAyC,OAAA,YAAAS,KAAAlD,EAAAuD,WAAAjC,GAAA,KAAA0D,SAAA9E,EAAA,EAAA8E,SAAA,SAAAnF,EAAAxD,GAAA,aAAAwD,EAAAmB,KAAA,MAAAnB,EAAAoB,IAAA,gBAAApB,EAAAmB,MAAA,aAAAnB,EAAAmB,KAAA,KAAAkC,KAAArD,EAAAoB,IAAA,WAAApB,EAAAmB,MAAA,KAAA8D,KAAA,KAAA7D,IAAApB,EAAAoB,IAAA,KAAAwB,OAAA,cAAAS,KAAA,kBAAArD,EAAAmB,MAAA3E,IAAA,KAAA6G,KAAA7G,GAAAiF,CAAA,EAAA2D,OAAA,SAAApF,GAAA,QAAAxD,EAAA,KAAAoH,WAAA7K,OAAA,EAAAyD,GAAA,IAAAA,EAAA,KAAAyD,EAAA,KAAA2D,WAAApH,GAAA,GAAAyD,EAAAyD,aAAA1D,EAAA,YAAAmF,SAAAlF,EAAA8D,WAAA9D,EAAA0D,UAAAG,EAAA7D,GAAAwB,CAAA,kBAAAzB,GAAA,QAAAxD,EAAA,KAAAoH,WAAA7K,OAAA,EAAAyD,GAAA,IAAAA,EAAA,KAAAyD,EAAA,KAAA2D,WAAApH,GAAA,GAAAyD,EAAAuD,SAAAxD,EAAA,KAAAE,EAAAD,EAAA8D,WAAA,aAAA7D,EAAAiB,KAAA,KAAAlJ,EAAAiI,EAAAkB,IAAA0C,EAAA7D,EAAA,QAAAhI,CAAA,QAAAyK,MAAA,0BAAA2C,cAAA,SAAA7I,EAAAyD,EAAAC,GAAA,YAAA2C,SAAA,CAAAvC,SAAA0B,EAAAxF,GAAA4G,WAAAnD,EAAAqD,QAAApD,GAAA,cAAA0C,SAAA,KAAAxB,IAAApB,GAAAyB,CAAA,GAAAjF,CAAA,UAAAmL,EAAA1H,GAAA,gBAAAA,GAAA,GAAA7F,MAAAC,QAAA4F,GAAA,OAAA2H,EAAA3H,EAAA,CAAA4H,CAAA5H,IAAA,SAAAA,GAAA,uBAAAG,QAAA,MAAAH,EAAAG,OAAAE,WAAA,MAAAL,EAAA,qBAAA7F,MAAA0N,KAAA7H,EAAA,CAAA8H,CAAA9H,IAAA,SAAAA,EAAAI,GAAA,GAAAJ,EAAA,qBAAAA,EAAA,OAAA2H,EAAA3H,EAAAI,GAAA,IAAAL,EAAA,GAAAF,SAAApH,KAAAuH,GAAAd,MAAA,uBAAAa,GAAAC,EAAAmE,cAAApE,EAAAC,EAAAmE,YAAAC,MAAA,QAAArE,GAAA,QAAAA,EAAA5F,MAAA0N,KAAA7H,GAAA,cAAAD,GAAA,2CAAAgI,KAAAhI,GAAA4H,EAAA3H,EAAAI,QAAA,GAAA4H,CAAAhI,IAAA,qBAAAkD,UAAA,wIAAA+E,EAAA,UAAAN,EAAA3H,EAAAI,IAAA,MAAAA,GAAAA,EAAAJ,EAAAlH,UAAAsH,EAAAJ,EAAAlH,QAAA,QAAAyD,EAAA,EAAA0D,EAAA9F,MAAAiG,GAAA7D,EAAA6D,EAAA7D,IAAA0D,EAAA1D,GAAAyD,EAAAzD,GAAA,OAAA0D,CAAA,UAAAoF,EAAApF,EAAAF,EAAAxD,EAAAyD,EAAAhI,EAAAoI,EAAAE,GAAA,QAAAJ,EAAAD,EAAAG,GAAAE,GAAAE,EAAAN,EAAA3G,KAAA,OAAA0G,GAAA,YAAA1D,EAAA0D,EAAA,CAAAC,EAAAwC,KAAA3C,EAAAS,GAAAkE,QAAArC,QAAA7B,GAAA+B,KAAAvC,EAAAhI,EAAA,UAAAsN,EAAArF,GAAA,sBAAAF,EAAA,KAAAxD,EAAA1D,UAAA,WAAA6L,SAAA,SAAA1E,EAAAhI,GAAA,IAAAoI,EAAAH,EAAAsF,MAAAxF,EAAAxD,GAAA,SAAAiJ,EAAAvF,GAAAoF,EAAAjF,EAAAJ,EAAAhI,EAAAwN,EAAAC,EAAA,OAAAxF,EAAA,UAAAwF,EAAAxF,GAAAoF,EAAAjF,EAAAJ,EAAAhI,EAAAwN,EAAAC,EAAA,QAAAxF,EAAA,CAAAuF,OAAA,gBAAA0C,EAAA3L,EAAAyD,GAAA,IAAAD,EAAA9H,OAAA0M,KAAApI,GAAA,GAAAtE,OAAAkQ,sBAAA,KAAAnQ,EAAAC,OAAAkQ,sBAAA5L,GAAAyD,IAAAhI,EAAAA,EAAAoQ,QAAA,SAAApI,GAAA,OAAA/H,OAAAoQ,yBAAA9L,EAAAyD,GAAA7H,UAAA,KAAA4H,EAAA6D,KAAA2B,MAAAxF,EAAA/H,EAAA,QAAA+H,CAAA,UAAA3E,EAAAmB,GAAA,QAAAyD,EAAA,EAAAA,EAAAnH,UAAAC,OAAAkH,IAAA,KAAAD,EAAA,MAAAlH,UAAAmH,GAAAnH,UAAAmH,GAAA,GAAAA,EAAA,EAAAkI,EAAAjQ,OAAA8H,IAAA,GAAA3G,SAAA,SAAA4G,GAAAsI,EAAA/L,EAAAyD,EAAAD,EAAAC,GAAA,IAAA/H,OAAAsQ,0BAAAtQ,OAAAuQ,iBAAAjM,EAAAtE,OAAAsQ,0BAAAxI,IAAAmI,EAAAjQ,OAAA8H,IAAA3G,SAAA,SAAA4G,GAAA/H,OAAAC,eAAAqE,EAAAyD,EAAA/H,OAAAoQ,yBAAAtI,EAAAC,GAAA,WAAAzD,CAAA,UAAA+L,EAAA/L,EAAAyD,EAAAD,GAAA,OAAAC,EAAAyI,EAAAzI,MAAAzD,EAAAtE,OAAAC,eAAAqE,EAAAyD,EAAA,CAAAzG,MAAAwG,EAAA5H,YAAA,EAAAuI,cAAA,EAAAC,UAAA,IAAApE,EAAAyD,GAAAD,EAAAxD,CAAA,UAAAmM,EAAAnM,EAAAyD,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAlH,OAAAiH,IAAA,KAAA/H,EAAAgI,EAAAD,GAAA/H,EAAAG,WAAAH,EAAAG,aAAA,EAAAH,EAAA0I,cAAA,YAAA1I,IAAAA,EAAA2I,UAAA,GAAA1I,OAAAC,eAAAqE,EAAAkM,EAAAzQ,EAAAD,KAAAC,EAAA,WAAAyQ,EAAA1I,GAAA,IAAAG,EAAA,SAAAH,GAAA,aAAArG,EAAAqG,KAAAA,EAAA,OAAAA,EAAA,IAAAxD,EAAAwD,EAAAI,OAAAwI,aAAA,YAAApM,EAAA,KAAA2D,EAAA3D,EAAA9D,KAAAsH,EAAAC,UAAA,aAAAtG,EAAAwG,GAAA,OAAAA,EAAA,UAAAgD,UAAA,uDAAA0F,OAAA7I,EAAA,CAAA8I,CAAA9I,GAAA,gBAAArG,EAAAwG,GAAAA,EAAAA,EAAA,GAkMA,QADsB,IA3LH,WAoBf,OA1BJ3D,EAWI,SAAAuM,KAXJ,SAAA1I,EAAAH,GAAA,KAAAG,aAAAH,GAAA,UAAAiD,UAAA,qCAWkB/H,CAAA,KAAA2N,GACVlR,KAAKsD,OAAS,CACV6K,OAAQ,GACR1K,QAAS,eACTC,aAAc,UACdqC,eAAgB,sCAChBoL,gBAAiB,oBACjBC,SAAU,SAGdpR,KAAKqR,GAAK,KACVrR,KAAKoO,oBAAsB,GAC3BpO,KAAKsR,eAAgB,CACzB,EAxBJlJ,EA0BI,EAAAjI,IAAA,OAAAwB,MAIA,WAAkB,IAAAmC,EAAA,KAAbR,EAAMrC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEX,GAAIjB,KAAKsR,cACLrC,QAAQsC,KAAK,4CADjB,CASA,GAHAvR,KAAKsD,OAAME,EAAAA,EAAA,GAAQxD,KAAKsD,QAAWA,GAG9BtD,KAAKsD,OAAO6K,OAAjB,CAMAnO,KAAKqR,GAAK,IAAIhO,EAAU,CACpBI,QAASzD,KAAKsD,OAAOG,QACrBC,aAAc1D,KAAKsD,OAAOI,aAC1B0N,SAAUpR,KAAKsD,OAAO8N,WAI1B,IAAMxN,EAAW5D,KAAKqR,GAAGG,OAezB,OAZAxR,KAAKqR,GAAGI,GAAG,eAAe,SAACvL,GAAO,OAAKpC,EAAK4N,kBAAkBxL,EAAQ,IACtElG,KAAKqR,GAAGI,GAAG,QAAQ,kBAAM3N,EAAK6N,gBAAgB,IAG9C/N,EAASW,eAAemB,cAAc,kBAAkBlB,YAAcxE,KAAKsD,OAAO6N,gBAGlFnR,KAAKsR,eAAgB,EAGrBtR,KAAK4R,iBAEE5R,IAzBP,CAFIiP,QAAQC,MAAM,oCAPlB,CAmCJ,GAEA,CAAA/O,IAAA,oBAAAwB,OAAAkQ,EAAAnE,EAAAxF,IAAAuE,MAIA,SAAAyB,EAAwBhI,GAAO,IAAAmI,EAAAyD,EAAA,OAAA5J,IAAAc,MAAA,SAAAwF,GAAA,cAAAA,EAAAtB,KAAAsB,EAAAhD,MAAA,OAWG,OAT9BxL,KAAKqR,GAAGU,WAAW7L,EAAS,QAG5BlG,KAAKoO,oBAAoBpC,KAAK,CAC1BgG,KAAM,OACNC,QAAS/L,IAIblG,KAAKqR,GAAGa,sBAAsB1D,EAAAtB,KAAA,EAAAsB,EAAAhD,KAAA,EAIHsC,EACnB9N,KAAKsD,OAAO6K,OACZjI,EACAlG,KAAKoO,qBACR,OAJKC,EAAQG,EAAAtD,KAOdlL,KAAKqR,GAAG9K,sBAEJ8H,EAAS8D,SAETnS,KAAKqR,GAAGU,WAAW1D,EAASnI,QAAS,OAGrClG,KAAKoO,oBAAoBpC,KAAK,CAC1BgG,KAAM,YACNC,QAAS5D,EAASnI,UAIlBlG,KAAKoO,oBAAoBlN,OAAS,KAE5B4Q,EAAe9R,KAAKoO,oBAAoB,GAC9CpO,KAAKoO,oBAAsB,CACvB0D,GAAY5M,OAAA4K,EACT9P,KAAKoO,oBAAoB9G,OAAO,SAK3CtH,KAAKqR,GAAGU,WAAW,yDAA0D,OAC7E9C,QAAQC,MAAM,aAAcb,EAASa,QACxCV,EAAAhD,KAAA,iBAAAgD,EAAAtB,KAAA,GAAAsB,EAAAQ,GAAAR,EAAA,SAGDxO,KAAKqR,GAAG9K,sBAGRvG,KAAKqR,GAAGU,WAAW,sFAAwF,OAC3G9C,QAAQC,MAAM,yBAAwBV,EAAAQ,IAAS,yBAAAR,EAAArB,OAAA,GAAAe,EAAA,mBAEtD,SAxDsBH,GAAA,OAAA8D,EAAAlE,MAAC,KAAD1M,UAAA,IA0DvB,CAAAd,IAAA,iBAAAwB,MAGA,WAEI3B,KAAK4R,gBACT,GAEA,CAAAzR,IAAA,iBAAAwB,OAAAyQ,EAAA1E,EAAAxF,IAAAuE,MAGA,SAAA6C,IAAA,OAAApH,IAAAc,MAAA,SAAAyG,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAjE,MAAA,cAAAiE,EAAAvC,KAAA,EAAAuC,EAAAjE,KAAA,EAEkC2D,EAAqBnP,KAAKsD,OAAO6K,QAAO,QAAjDsB,EAAAvE,MAEGlL,KAAKsR,eACrBrC,QAAQsC,KAAK,uCAChB9B,EAAAjE,KAAA,gBAAAiE,EAAAvC,KAAA,EAAAuC,EAAAT,GAAAS,EAAA,SAEDR,QAAQC,MAAM,6BAA4BO,EAAAT,IAAS,yBAAAS,EAAAtC,OAAA,GAAAmC,EAAA,kBAE1D,WAVmB,OAAA8C,EAAAzE,MAAC,KAAD1M,UAAA,IAYpB,CAAAd,IAAA,OAAAwB,MAGA,WACQ3B,KAAKqR,KAAOrR,KAAKqR,GAAG1N,QACpB3D,KAAKqR,GAAGlN,YAEhB,GAEA,CAAAhE,IAAA,QAAAwB,MAGA,WACQ3B,KAAKqR,IAAMrR,KAAKqR,GAAG1N,QACnB3D,KAAKqR,GAAGlN,YAEhB,GAEA,CAAAhE,IAAA,oBAAAwB,MAGA,WACI3B,KAAKoO,oBAAsB,GAEvBpO,KAAKqR,KAEqBrR,KAAKqR,GAAGzN,SAASU,SACzBzC,UAAY,GAG9B7B,KAAKqR,GAAGvM,oBAEhB,IA7LJsD,GAAA0I,EAAAnM,EAAAhE,UAAAyH,GAAA/H,OAAAC,eAAAqE,EAAA,aAAAoE,UAAA,IAAApE,EAAA,IAAAA,EAAAyD,EA8IIgK,EAtEAP,CAqHC,CAvLc","sources":["webpack://ChatbotWidget/webpack/universalModuleDefinition","webpack://ChatbotWidget/webpack/bootstrap","webpack://ChatbotWidget/webpack/runtime/define property getters","webpack://ChatbotWidget/webpack/runtime/hasOwnProperty shorthand","webpack://ChatbotWidget/./src/js/utils.js","webpack://ChatbotWidget/./src/js/ui.js","webpack://ChatbotWidget/./src/js/api.js","webpack://ChatbotWidget/./src/js/chatbot.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ChatbotWidget\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ChatbotWidget\"] = factory();\n\telse\n\t\troot[\"ChatbotWidget\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\r\n * Utility functions for the chatbot widget\r\n */\r\n\r\n/**\r\n * Creates an HTML element with the given attributes and children\r\n * @param {string} tag - The HTML tag name\r\n * @param {Object} attributes - Key-value pairs of attributes\r\n * @param {Array|string|HTMLElement} children - Child elements or text content\r\n * @returns {HTMLElement} The created element\r\n */\r\nexport function createElement(tag, attributes = {}, children = []) {\r\n    const element = document.createElement(tag);\r\n\r\n    // Set attributes\r\n    Object.entries(attributes).forEach(([key, value]) => {\r\n        if (key === 'className') {\r\n            element.className = value;\r\n        } else if (key === 'innerHTML') {\r\n            element.innerHTML = value;\r\n        } else if (key === 'style' && typeof value === 'object') {\r\n            Object.assign(element.style, value);\r\n        } else if (key.startsWith('on') && typeof value === 'function') {\r\n            const eventName = key.substring(2).toLowerCase();\r\n            element.addEventListener(eventName, value);\r\n        } else {\r\n            element.setAttribute(key, value);\r\n        }\r\n    });\r\n\r\n    // Add children\r\n    if (Array.isArray(children)) {\r\n        children.forEach(child => {\r\n            if (child) {\r\n                appendChild(element, child);\r\n            }\r\n        });\r\n    } else if (children) {\r\n        appendChild(element, children);\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Appends a child to an element\r\n * @param {HTMLElement} parent - The parent element\r\n * @param {HTMLElement|string} child - The child element or text\r\n */\r\nfunction appendChild(parent, child) {\r\n    if (typeof child === 'string' || typeof child === 'number') {\r\n        parent.appendChild(document.createTextNode(child));\r\n    } else if (child instanceof HTMLElement) {\r\n        parent.appendChild(child);\r\n    }\r\n}\r\n\r\n/**\r\n * Formats a date to a readable time string (HH:MM)\r\n * @param {Date} date - The date to format\r\n * @returns {string} Formatted time string\r\n */\r\nexport function formatTime(date) {\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n}\r\n\r\n/**\r\n * Safely parses JSON with error handling\r\n * @param {string} str - JSON string to parse\r\n * @param {*} fallback - Fallback value if parsing fails\r\n * @returns {*} Parsed object or fallback value\r\n */\r\nexport function safeJsonParse(str, fallback = {}) {\r\n    try {\r\n        return JSON.parse(str);\r\n    } catch (e) {\r\n        console.error('Error parsing JSON:', e);\r\n        return fallback;\r\n    }\r\n}\r\n\r\n/**\r\n * Debounces a function call\r\n * @param {Function} func - The function to debounce\r\n * @param {number} wait - Wait time in milliseconds\r\n * @returns {Function} Debounced function\r\n */\r\nexport function debounce(func, wait = 300) {\r\n    let timeout;\r\n    return function executedFunction(...args) {\r\n        const later = () => {\r\n            clearTimeout(timeout);\r\n            func(...args);\r\n        };\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n    };\r\n}\r\n\r\n/**\r\n * Generates a unique ID\r\n * @returns {string} Unique ID\r\n */\r\nexport function generateId() {\r\n    return Date.now().toString(36) + Math.random().toString(36).substring(2);\r\n}\r\n\r\n/**\r\n * Scrolls an element to the bottom\r\n * @param {HTMLElement} element - The element to scroll\r\n * @param {boolean} smooth - Whether to use smooth scrolling\r\n */\r\nexport function scrollToBottom(element, smooth = true) {\r\n    if (!element) return;\r\n\r\n    element.scrollTo({\r\n        top: element.scrollHeight,\r\n        behavior: smooth ? 'smooth' : 'auto'\r\n    });\r\n}\r\n","import { createElement, formatTime, scrollToBottom } from './utils';\r\n\r\n// Define SVG icons inline\r\nconst chatIconSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n  <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path>\r\n</svg>`;\r\n\r\nconst closeIconSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n  <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n  <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n</svg>`;\r\n\r\nconst sendIconSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n  <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\r\n  <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\r\n</svg>`;\r\n\r\nconst optionsIconSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n  <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\r\n  <circle cx=\"12\" cy=\"5\" r=\"1\"></circle>\r\n  <circle cx=\"12\" cy=\"19\" r=\"1\"></circle>\r\n</svg>`;\r\n\r\n/**\r\n * UI module for the chatbot widget\r\n */\r\nexport class ChatbotUI {\r\n    constructor(config) {\r\n        this.config = {\r\n            botName: 'AI Assistant',\r\n            primaryColor: '#5c6bc0',\r\n            ...config\r\n        };\r\n\r\n        this.isOpen = false;\r\n        this.elements = {};\r\n        this.eventHandlers = {};\r\n    }\r\n\r\n    /**\r\n     * Initializes the UI\r\n     * @returns {Object} The created UI elements\r\n     */\r\n    init() {\r\n        // Create main container\r\n        this.elements.container = createElement('div', { className: 'chatbot-widget' });\r\n\r\n        // Create toggle button\r\n        this.elements.toggleBtn = createElement('button', {\r\n            className: 'chatbot-toggle-btn',\r\n            ariaLabel: 'Toggle chatbot',\r\n            innerHTML: chatIconSvg,\r\n            onClick: () => this.toggleChat()\r\n        });\r\n\r\n        // Create chat window\r\n        this.elements.window = createElement('div', { className: 'chatbot-window' });\r\n\r\n        // Create header\r\n        this.elements.header = createElement('div', { className: 'chatbot-header' }, [\r\n            createElement('div', { className: 'chatbot-title' }, this.config.botName),\r\n            createElement('button', {\r\n                className: 'chatbot-options-btn',\r\n                ariaLabel: 'Chatbot options',\r\n                innerHTML: optionsIconSvg\r\n            })\r\n        ]);\r\n\r\n        // Create messages container\r\n        this.elements.messages = createElement('div', { className: 'chatbot-messages' });\r\n\r\n        // Create input container\r\n        this.elements.inputContainer = createElement('div', { className: 'chatbot-input-container' }, [\r\n            createElement('textarea', {\r\n                className: 'chatbot-input',\r\n                placeholder: 'Type a message...',\r\n                rows: 1,\r\n                onKeydown: (e) => this.handleInputKeydown(e)\r\n            }),\r\n            createElement('button', {\r\n                className: 'chatbot-send-btn',\r\n                ariaLabel: 'Send message',\r\n                innerHTML: sendIconSvg,\r\n                onClick: () => this.handleSendClick()\r\n            })\r\n        ]);\r\n\r\n        // Assemble the chat window\r\n        this.elements.window.appendChild(this.elements.header);\r\n        this.elements.window.appendChild(this.elements.messages);\r\n        this.elements.window.appendChild(this.elements.inputContainer);\r\n\r\n        // Add welcome message\r\n        this.addWelcomeMessage();\r\n\r\n        // Append elements to the container\r\n        this.elements.container.appendChild(this.elements.toggleBtn);\r\n        this.elements.container.appendChild(this.elements.window);\r\n\r\n        // Apply custom styles\r\n        this.applyCustomStyles();\r\n\r\n        // Append container to the body\r\n        document.body.appendChild(this.elements.container);\r\n\r\n        return this.elements;\r\n    }\r\n\r\n    /**\r\n     * Applies custom styles based on config\r\n     */\r\n    applyCustomStyles() {\r\n        if (this.config.primaryColor) {\r\n            const style = document.createElement('style');\r\n            style.textContent = `\r\n        :root {\r\n          --chatbot-primary-color: ${this.config.primaryColor};\r\n          --chatbot-primary-dark: ${this.darkenColor(this.config.primaryColor, 20)};\r\n          --chatbot-primary-light: ${this.lightenColor(this.config.primaryColor, 20)};\r\n        }\r\n      `;\r\n            document.head.appendChild(style);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggles the chat window open/closed\r\n     */\r\n    toggleChat() {\r\n        this.isOpen = !this.isOpen;\r\n\r\n        if (this.isOpen) {\r\n            this.elements.window.classList.add('active');\r\n            this.elements.toggleBtn.innerHTML = closeIconSvg;\r\n            this.elements.toggleBtn.setAttribute('aria-expanded', 'true');\r\n\r\n            // Focus the input field\r\n            setTimeout(() => {\r\n                this.elements.inputContainer.querySelector('.chatbot-input').focus();\r\n            }, 300);\r\n\r\n            // Trigger onOpen event\r\n            if (this.eventHandlers.onOpen) {\r\n                this.eventHandlers.onOpen();\r\n            }\r\n        } else {\r\n            this.elements.window.classList.remove('active');\r\n            this.elements.toggleBtn.innerHTML = chatIconSvg;\r\n            this.elements.toggleBtn.setAttribute('aria-expanded', 'false');\r\n\r\n            // Trigger onClose event\r\n            if (this.eventHandlers.onClose) {\r\n                this.eventHandlers.onClose();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a welcome message\r\n     */\r\n    addWelcomeMessage() {\r\n        const welcomeMessage = createElement('div', {\r\n            className: 'chatbot-message bot'\r\n        }, `Hi there! I'm ${this.config.botName}. How can I help you today?`);\r\n\r\n        this.elements.messages.appendChild(welcomeMessage);\r\n    }\r\n\r\n    /**\r\n     * Adds a message to the chat\r\n     * @param {string} text - The message text\r\n     * @param {string} sender - The message sender ('bot' or 'user')\r\n     */\r\n    addMessage(text, sender = 'bot') {\r\n        const message = createElement('div', {\r\n            className: `chatbot-message ${sender}`\r\n        }, [\r\n            text,\r\n            createElement('div', {\r\n                className: 'chatbot-message-time'\r\n            }, formatTime(new Date()))\r\n        ]);\r\n\r\n        this.elements.messages.appendChild(message);\r\n        scrollToBottom(this.elements.messages);\r\n\r\n        return message;\r\n    }\r\n\r\n    /**\r\n     * Shows the typing indicator\r\n     */\r\n    showTypingIndicator() {\r\n        // Remove existing typing indicator if any\r\n        this.hideTypingIndicator();\r\n\r\n        const typingIndicator = createElement('div', { className: 'chatbot-typing' }, [\r\n            createElement('div', { className: 'chatbot-typing-dot' }),\r\n            createElement('div', { className: 'chatbot-typing-dot' }),\r\n            createElement('div', { className: 'chatbot-typing-dot' })\r\n        ]);\r\n\r\n        this.elements.typingIndicator = typingIndicator;\r\n        this.elements.messages.appendChild(typingIndicator);\r\n        scrollToBottom(this.elements.messages);\r\n    }\r\n\r\n    /**\r\n     * Hides the typing indicator\r\n     */\r\n    hideTypingIndicator() {\r\n        if (this.elements.typingIndicator) {\r\n            this.elements.typingIndicator.remove();\r\n            this.elements.typingIndicator = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles the send button click\r\n     */\r\n    handleSendClick() {\r\n        const input = this.elements.inputContainer.querySelector('.chatbot-input');\r\n        const message = input.value.trim();\r\n\r\n        if (message) {\r\n            // Trigger onSendMessage event\r\n            if (this.eventHandlers.onSendMessage) {\r\n                this.eventHandlers.onSendMessage(message);\r\n            }\r\n\r\n            // Clear input\r\n            input.value = '';\r\n            input.style.height = 'auto';\r\n            input.focus();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles keydown events in the input field\r\n     * @param {Event} event - The keydown event\r\n     */\r\n    handleInputKeydown(event) {\r\n        const input = event.target;\r\n\r\n        // Auto-resize textarea\r\n        setTimeout(() => {\r\n            input.style.height = 'auto';\r\n            input.style.height = Math.min(input.scrollHeight, 100) + 'px';\r\n        }, 0);\r\n\r\n        // Send message on Enter (without Shift)\r\n        if (event.key === 'Enter' && !event.shiftKey) {\r\n            event.preventDefault();\r\n            this.handleSendClick();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Registers an event handler\r\n     * @param {string} event - The event name\r\n     * @param {Function} handler - The event handler\r\n     */\r\n    on(event, handler) {\r\n        this.eventHandlers[`on${event.charAt(0).toUpperCase() + event.slice(1)}`] = handler;\r\n    }\r\n\r\n    /**\r\n     * Lightens a color by a percentage\r\n     * @param {string} color - The color to lighten\r\n     * @param {number} percent - The percentage to lighten by\r\n     * @returns {string} The lightened color\r\n     */\r\n    lightenColor(color, percent) {\r\n        const num = parseInt(color.replace('#', ''), 16);\r\n        const amt = Math.round(2.55 * percent);\r\n        const R = (num >> 16) + amt;\r\n        const G = (num >> 8 & 0x00FF) + amt;\r\n        const B = (num & 0x0000FF) + amt;\r\n\r\n        return '#' + (\r\n            0x1000000 +\r\n            (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 +\r\n            (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 +\r\n            (B < 255 ? B < 1 ? 0 : B : 255)\r\n        ).toString(16).slice(1);\r\n    }\r\n\r\n    /**\r\n     * Darkens a color by a percentage\r\n     * @param {string} color - The color to darken\r\n     * @param {number} percent - The percentage to darken by\r\n     * @returns {string} The darkened color\r\n     */\r\n    darkenColor(color, percent) {\r\n        const num = parseInt(color.replace('#', ''), 16);\r\n        const amt = Math.round(2.55 * percent);\r\n        const R = (num >> 16) - amt;\r\n        const G = (num >> 8 & 0x00FF) - amt;\r\n        const B = (num & 0x0000FF) - amt;\r\n\r\n        return '#' + (\r\n            0x1000000 +\r\n            (R > 0 ? R : 0) * 0x10000 +\r\n            (G > 0 ? G : 0) * 0x100 +\r\n            (B > 0 ? B : 0)\r\n        ).toString(16).slice(1);\r\n    }\r\n}\r\n","/**\r\n * API communication functions for the chatbot widget\r\n */\r\n\r\n/**\r\n * Sends a message to the chatbot API\r\n * @param {string} apiUrl - The API URL\r\n * @param {string} message - The user message\r\n * @param {Array} conversationHistory - Previous messages in the conversation\r\n * @returns {Promise<Object>} The API response\r\n */\r\nexport async function sendMessage(apiUrl, message, conversationHistory = []) {\r\n    try {\r\n        const response = await fetch(`${apiUrl}/api/chat`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                message,\r\n                conversationHistory\r\n            })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorText = await response.text();\r\n            throw new Error(`API error (${response.status}): ${errorText}`);\r\n        }\r\n\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error sending message to API:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n/**\r\n * Checks if the API is available\r\n * @param {string} apiUrl - The API URL\r\n * @returns {Promise<boolean>} Whether the API is available\r\n */\r\nexport async function checkApiAvailability(apiUrl) {\r\n    try {\r\n        const controller = new AbortController();\r\n        const timeoutId = setTimeout(() => controller.abort(), 5000);\r\n\r\n        const response = await fetch(`${apiUrl}/api/chat/health`, {\r\n            method: 'GET',\r\n            signal: controller.signal\r\n        });\r\n\r\n        clearTimeout(timeoutId);\r\n        return response.ok;\r\n    } catch (error) {\r\n        console.error('API availability check failed:', error);\r\n        return false;\r\n    }\r\n}\r\n","import '../css/chatbot.css';\r\nimport { ChatbotUI } from './ui';\r\nimport { sendMessage, checkApiAvailability } from './api';\r\n\r\n/**\r\n * Chatbot Widget main class\r\n */\r\nclass ChatbotWidget {\r\n    /**\r\n     * Creates a new ChatbotWidget instance\r\n     * @param {Object} config - Configuration options\r\n     */\r\n    constructor() {\r\n        this.config = {\r\n            apiUrl: '',\r\n            botName: 'AI Assistant',\r\n            primaryColor: '#5c6bc0',\r\n            welcomeMessage: 'Hi there! How can I help you today?',\r\n            placeholderText: 'Type a message...',\r\n            position: 'right', // 'right' or 'left'\r\n        };\r\n\r\n        this.ui = null;\r\n        this.conversationHistory = [];\r\n        this.isInitialized = false;\r\n    }\r\n\r\n    /**\r\n     * Initializes the chatbot widget\r\n     * @param {Object} config - Configuration options\r\n     */\r\n    init(config = {}) {\r\n        // Prevent multiple initializations\r\n        if (this.isInitialized) {\r\n            console.warn('ChatbotWidget is already initialized');\r\n            return;\r\n        }\r\n\r\n        // Merge config with defaults\r\n        this.config = { ...this.config, ...config };\r\n\r\n        // Validate required config\r\n        if (!this.config.apiUrl) {\r\n            console.error('ChatbotWidget: apiUrl is required');\r\n            return;\r\n        }\r\n\r\n        // Initialize UI\r\n        this.ui = new ChatbotUI({\r\n            botName: this.config.botName,\r\n            primaryColor: this.config.primaryColor,\r\n            position: this.config.position,\r\n        });\r\n\r\n        // Initialize UI elements\r\n        const elements = this.ui.init();\r\n\r\n        // Register event handlers\r\n        this.ui.on('sendMessage', (message) => this.handleUserMessage(message));\r\n        this.ui.on('open', () => this.handleChatOpen());\r\n\r\n        // Set placeholder text\r\n        elements.inputContainer.querySelector('.chatbot-input').placeholder = this.config.placeholderText;\r\n\r\n        // Mark as initialized\r\n        this.isInitialized = true;\r\n\r\n        // Check API availability\r\n        this.checkApiStatus();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Handles when a user sends a message\r\n     * @param {string} message - The user message\r\n     */\r\n    async handleUserMessage(message) {\r\n        // Add user message to UI\r\n        this.ui.addMessage(message, 'user');\r\n\r\n        // Add to conversation history\r\n        this.conversationHistory.push({\r\n            role: 'user',\r\n            content: message\r\n        });\r\n\r\n        // Show typing indicator\r\n        this.ui.showTypingIndicator();\r\n\r\n        try {\r\n            // Send message to API\r\n            const response = await sendMessage(\r\n                this.config.apiUrl,\r\n                message,\r\n                this.conversationHistory\r\n            );\r\n\r\n            // Hide typing indicator\r\n            this.ui.hideTypingIndicator();\r\n\r\n            if (response.success) {\r\n                // Add bot response to UI\r\n                this.ui.addMessage(response.message, 'bot');\r\n\r\n                // Add to conversation history\r\n                this.conversationHistory.push({\r\n                    role: 'assistant',\r\n                    content: response.message\r\n                });\r\n\r\n                // Limit conversation history length (to prevent very long contexts)\r\n                if (this.conversationHistory.length > 20) {\r\n                    // Keep the first message (usually system prompt) and the last 19 messages\r\n                    const firstMessage = this.conversationHistory[0];\r\n                    this.conversationHistory = [\r\n                        firstMessage,\r\n                        ...this.conversationHistory.slice(-19)\r\n                    ];\r\n                }\r\n            } else {\r\n                // Show error message\r\n                this.ui.addMessage('Sorry, I encountered an error. Please try again later.', 'bot');\r\n                console.error('API error:', response.error);\r\n            }\r\n        } catch (error) {\r\n            // Hide typing indicator\r\n            this.ui.hideTypingIndicator();\r\n\r\n            // Show error message\r\n            this.ui.addMessage('Sorry, I\\'m having trouble connecting to my brain right now. Please try again later.', 'bot');\r\n            console.error('Error sending message:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles when the chat is opened\r\n     */\r\n    handleChatOpen() {\r\n        // Check API status when chat is opened\r\n        this.checkApiStatus();\r\n    }\r\n\r\n    /**\r\n     * Checks if the API is available\r\n     */\r\n    async checkApiStatus() {\r\n        try {\r\n            const isAvailable = await checkApiAvailability(this.config.apiUrl);\r\n\r\n            if (!isAvailable && this.isInitialized) {\r\n                console.warn('ChatbotWidget: API is not available');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error checking API status:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Opens the chat window\r\n     */\r\n    open() {\r\n        if (this.ui && !this.ui.isOpen) {\r\n            this.ui.toggleChat();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Closes the chat window\r\n     */\r\n    close() {\r\n        if (this.ui && this.ui.isOpen) {\r\n            this.ui.toggleChat();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears the conversation history\r\n     */\r\n    clearConversation() {\r\n        this.conversationHistory = [];\r\n\r\n        if (this.ui) {\r\n            // Clear messages in UI\r\n            const messagesContainer = this.ui.elements.messages;\r\n            messagesContainer.innerHTML = '';\r\n\r\n            // Add welcome message\r\n            this.ui.addWelcomeMessage();\r\n        }\r\n    }\r\n}\r\n\r\n// Create and export a singleton instance\r\nconst chatbotWidget = new ChatbotWidget();\r\nexport default chatbotWidget;\r\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","createElement","tag","attributes","arguments","length","undefined","children","element","document","entries","forEach","_ref","_ref2","value","className","innerHTML","_typeof","assign","style","startsWith","eventName","substring","toLowerCase","addEventListener","setAttribute","Array","isArray","child","appendChild","parent","createTextNode","HTMLElement","scrollToBottom","smooth","scrollTo","top","scrollHeight","behavior","chatIconSvg","ChatbotUI","config","_classCallCheck","_objectSpread","botName","primaryColor","isOpen","elements","eventHandlers","_this","container","toggleBtn","ariaLabel","onClick","toggleChat","window","header","messages","inputContainer","placeholder","rows","onKeydown","e","handleInputKeydown","handleSendClick","addWelcomeMessage","applyCustomStyles","body","textContent","concat","darkenColor","lightenColor","head","_this2","classList","add","setTimeout","querySelector","focus","onOpen","remove","onClose","welcomeMessage","text","date","message","Date","toLocaleTimeString","hour","minute","hideTypingIndicator","typingIndicator","input","trim","onSendMessage","height","event","target","Math","min","shiftKey","preventDefault","handler","charAt","toUpperCase","slice","color","percent","num","parseInt","replace","amt","round","R","G","B","toString","_regeneratorRuntime","t","r","n","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","sendMessage","_x","_x2","_sendMessage","_callee","apiUrl","conversationHistory","response","errorText","_args","_context","fetch","headers","JSON","stringify","ok","status","json","t0","console","error","checkApiAvailability","_x3","_checkApiAvailability","_callee2","controller","timeoutId","_context2","AbortController","abort","signal","clearTimeout","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","test","_unsupportedIterableToArray","_nonIterableSpread","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_defineProperties","toPrimitive","String","_toPrimitive","ChatbotWidget","placeholderText","position","ui","isInitialized","warn","init","on","handleUserMessage","handleChatOpen","checkApiStatus","_handleUserMessage","firstMessage","addMessage","role","content","showTypingIndicator","success","_checkApiStatus"],"sourceRoot":""}